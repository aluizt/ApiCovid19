buildscript {
	repositories {
		mavenCentral()
		maven { url "https://jcenter.bintray.com/" }
		maven { url "https://repo1.maven.org/maven2/" }
		maven { url "https://plugins.gradle.org/m2/" }
	}

	configurations.maybeCreate('pitest')

	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.4.RELEASE"
		classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.0'
		pitest "org.pitest:pitest-junit5-plugin:0.8"
	}
}

plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id "org.sonarqube" version "2.7"
	id 'info.solidsoft.pitest' version '1.4.0' apply false
}

mainClassName = 'br.com.covid19.Convid19Application'


dependencies {
	compile project(":contract")
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


allprojects {
	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'

	group = 'br.com.covid19'
	version = '1.0.0'
	sourceCompatibility = JavaVersion.VERSION_11

	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven { url 'https://repository.jboss.org/nexus/content/repositories/public/' }
	}

	ext {
		set('springCloudVersion', "Greenwich.RC2")
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
			mavenBom "org.springframework.boot:spring-boot-dependencies:2.1.9.RELEASE"
		}
	}


	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		//implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
		implementation 'org.springframework.hateoas:spring-hateoas'
		implementation 'org.springframework.boot:spring-boot-starter-webflux'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'junit', module: 'junit'
		}
		testImplementation 'io.projectreactor:reactor-test'
		testImplementation 'org.junit.jupiter:junit-jupiter-engine'
		testCompileOnly 'org.projectlombok:lombok'
	}

	test {
		useJUnitPlatform()
	}
}



